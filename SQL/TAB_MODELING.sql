DROP TABLE DBM_SANDBOX..PI_TABMODELING IF EXISTS;

CREATE TABLE DBM_SANDBOX..PI_TABMODELING AS
SELECT FIN.*,
	   NVL(FIN.TOTAL_SPEND/NULLIF(FIN.TOTAL_TRANSACTIONS, 0),0) AS AVERAGE_TICKET,
	   
	   NVL(FIN.SPEND_Qmin1/NULLIF(FIN.TRANSACTIONS_Qmin1, 0),0) AS AVERAGE_TICKET_Qmin1,
	   NVL(FIN.SPEND_Qmin2/NULLIF(FIN.TRANSACTIONS_Qmin2, 0),0) AS AVERAGE_TICKET_Qmin2,
	   NVL(FIN.SPEND_Qmin3/NULLIF(FIN.TRANSACTIONS_Qmin3, 0),0) AS AVERAGE_TICKET_Qmin3,
	   NVL(FIN.SPEND_Qmin4/NULLIF(FIN.TRANSACTIONS_Qmin4, 0),0) AS AVERAGE_TICKET_Qmin4,
	   
	   FIN.DAYS_AS_CUSTOMER/NULLIF(FIN.TOTAL_TRANSACTIONS, 0) AS DAYS_BTWN_PURCHASE,
	   CASE 
	   	WHEN FIN.RTL_FLAG = 1 AND FIN.INT_FLAG = 0 AND FIN.CAT_FLAG = 0 THEN 'Retail Only'
		WHEN FIN.RTL_FLAG = 0 AND FIN.INT_FLAG = 1 AND FIN.CAT_FLAG = 0 THEN 'Internet Only'
		WHEN FIN.RTL_FLAG = 0 AND FIN.INT_FLAG = 0 AND FIN.CAT_FLAG = 1 THEN 'Catalog Only'
		WHEN FIN.RTL_FLAG = 1 AND FIN.INT_FLAG = 1 AND FIN.CAT_FLAG = 0 THEN 'Retail|Internet'
		WHEN FIN.RTL_FLAG = 1 AND FIN.INT_FLAG = 0 AND FIN.CAT_FLAG = 1 THEN 'Retail|Catalog'
		WHEN FIN.RTL_FLAG = 1 AND FIN.INT_FLAG = 1 AND FIN.CAT_FLAG = 1 THEN 'Retail|Internet|Catalog'
		WHEN FIN.RTL_FLAG = 0 AND FIN.INT_FLAG = 1 AND FIN.CAT_FLAG = 1 THEN 'Internet|Catalog'
	   END AS CHANNEL_HIST,
	   
	   CASE 
	   	WHEN FIN.RTL_FLAG_Qmin1 = 1 AND FIN.INT_FLAG_Qmin1 = 0 AND FIN.CAT_FLAG_Qmin1 = 0 THEN 'Retail Only'
		WHEN FIN.RTL_FLAG_Qmin1 = 0 AND FIN.INT_FLAG_Qmin1 = 1 AND FIN.CAT_FLAG_Qmin1 = 0 THEN 'Internet Only'
		WHEN FIN.RTL_FLAG_Qmin1 = 0 AND FIN.INT_FLAG_Qmin1 = 0 AND FIN.CAT_FLAG_Qmin1 = 1 THEN 'Catalog Only'
		WHEN FIN.RTL_FLAG_Qmin1 = 1 AND FIN.INT_FLAG_Qmin1 = 1 AND FIN.CAT_FLAG_Qmin1 = 0 THEN 'Retail|Internet'
		WHEN FIN.RTL_FLAG_Qmin1 = 1 AND FIN.INT_FLAG_Qmin1 = 0 AND FIN.CAT_FLAG_Qmin1 = 1 THEN 'Retail|Catalog'
		WHEN FIN.RTL_FLAG_Qmin1 = 1 AND FIN.INT_FLAG_Qmin1 = 1 AND FIN.CAT_FLAG_Qmin1 = 1 THEN 'Retail|Internet|Catalog'
		WHEN FIN.RTL_FLAG_Qmin1 = 0 AND FIN.INT_FLAG_Qmin1 = 1 AND FIN.CAT_FLAG_Qmin1 = 1 THEN 'Internet|Catalog'
		ELSE 'No Purchase'
	   END AS CHANNEL_HIST_Qmin1,
	   
	   CASE 
	   	WHEN FIN.RTL_FLAG_Qmin2 = 1 AND FIN.INT_FLAG_Qmin2 = 0 AND FIN.CAT_FLAG_Qmin2 = 0 THEN 'Retail Only'
		WHEN FIN.RTL_FLAG_Qmin2 = 0 AND FIN.INT_FLAG_Qmin2 = 1 AND FIN.CAT_FLAG_Qmin2 = 0 THEN 'Internet Only'
		WHEN FIN.RTL_FLAG_Qmin2 = 0 AND FIN.INT_FLAG_Qmin2 = 0 AND FIN.CAT_FLAG_Qmin2 = 1 THEN 'Catalog Only'
		WHEN FIN.RTL_FLAG_Qmin2 = 1 AND FIN.INT_FLAG_Qmin2 = 1 AND FIN.CAT_FLAG_Qmin2 = 0 THEN 'Retail|Internet'
		WHEN FIN.RTL_FLAG_Qmin2 = 1 AND FIN.INT_FLAG_Qmin2 = 0 AND FIN.CAT_FLAG_Qmin2 = 1 THEN 'Retail|Catalog'
		WHEN FIN.RTL_FLAG_Qmin2 = 1 AND FIN.INT_FLAG_Qmin2 = 1 AND FIN.CAT_FLAG_Qmin2 = 1 THEN 'Retail|Internet|Catalog'
		WHEN FIN.RTL_FLAG_Qmin2 = 0 AND FIN.INT_FLAG_Qmin2 = 1 AND FIN.CAT_FLAG_Qmin2 = 1 THEN 'Internet|Catalog'
		ELSE 'No Purchase'
	   END AS CHANNEL_HIST_Qmin2,
	   
	   CASE 
	   	WHEN FIN.RTL_FLAG_Qmin2 = 1 AND FIN.INT_FLAG_Qmin3 = 0 AND FIN.CAT_FLAG_Qmin3 = 0 THEN 'Retail Only'
		WHEN FIN.RTL_FLAG_Qmin3 = 0 AND FIN.INT_FLAG_Qmin3 = 1 AND FIN.CAT_FLAG_Qmin3 = 0 THEN 'Internet Only'
		WHEN FIN.RTL_FLAG_Qmin3 = 0 AND FIN.INT_FLAG_Qmin3 = 0 AND FIN.CAT_FLAG_Qmin3 = 1 THEN 'Catalog Only'
		WHEN FIN.RTL_FLAG_Qmin3 = 1 AND FIN.INT_FLAG_Qmin3 = 1 AND FIN.CAT_FLAG_Qmin3 = 0 THEN 'Retail|Internet'
		WHEN FIN.RTL_FLAG_Qmin3 = 1 AND FIN.INT_FLAG_Qmin3 = 0 AND FIN.CAT_FLAG_Qmin3 = 1 THEN 'Retail|Catalog'
		WHEN FIN.RTL_FLAG_Qmin3 = 1 AND FIN.INT_FLAG_Qmin3 = 1 AND FIN.CAT_FLAG_Qmin3 = 1 THEN 'Retail|Internet|Catalog'
		WHEN FIN.RTL_FLAG_Qmin3 = 0 AND FIN.INT_FLAG_Qmin3 = 1 AND FIN.CAT_FLAG_Qmin3 = 1 THEN 'Internet|Catalog'
		ELSE 'No Purchase'
	   END AS CHANNEL_HIST_Qmin3,
	   
	   CASE 
	   	WHEN FIN.RTL_FLAG_Qmin3 = 1 AND FIN.INT_FLAG_Qmin4 = 0 AND FIN.CAT_FLAG_Qmin4 = 0 THEN 'Retail Only'
		WHEN FIN.RTL_FLAG_Qmin4 = 0 AND FIN.INT_FLAG_Qmin4 = 1 AND FIN.CAT_FLAG_Qmin4 = 0 THEN 'Internet Only'
		WHEN FIN.RTL_FLAG_Qmin4 = 0 AND FIN.INT_FLAG_Qmin4 = 0 AND FIN.CAT_FLAG_Qmin4 = 1 THEN 'Catalog Only'
		WHEN FIN.RTL_FLAG_Qmin4 = 1 AND FIN.INT_FLAG_Qmin4 = 1 AND FIN.CAT_FLAG_Qmin4 = 0 THEN 'Retail|Internet'
		WHEN FIN.RTL_FLAG_Qmin4 = 1 AND FIN.INT_FLAG_Qmin4 = 0 AND FIN.CAT_FLAG_Qmin4 = 1 THEN 'Retail|Catalog'
		WHEN FIN.RTL_FLAG_Qmin4 = 1 AND FIN.INT_FLAG_Qmin4 = 1 AND FIN.CAT_FLAG_Qmin4 = 1 THEN 'Retail|Internet|Catalog'
		WHEN FIN.RTL_FLAG_Qmin4 = 0 AND FIN.INT_FLAG_Qmin4 = 1 AND FIN.CAT_FLAG_Qmin4 = 1 THEN 'Internet|Catalog'
		ELSE 'No Purchase'
	   END AS CHANNEL_HIST_Qmin4,
	   
	   CASE
	   	WHEN FIN.FISH_SALES > FIN.HUNT_SALES AND FIN.FISH_SALES > FIN.OTHER_SALES THEN 'FISHING'
		WHEN FIN.HUNT_SALES > FIN.FISH_SALES AND FIN.HUNT_SALES > FIN.OTHER_SALES THEN 'HUNTING'
		WHEN FIN.FISH_SALES > FIN.HUNT_SALES AND FIN.FISH_SALES < FIN.OTHER_SALES THEN 'FISHING MIX'
		WHEN FIN.HUNT_SALES > FIN.FISH_SALES AND FIN.HUNT_SALES < FIN.OTHER_SALES THEN 'HUNTING MIX'
		ELSE 'OTHER'
	   END AS CUSTOMER_TYPE,
	   
	   CASE
	   	WHEN FIN.FISH_SALES_Qmin1 > FIN.HUNT_SALES_Qmin1 AND FIN.FISH_SALES_Qmin1 > FIN.OTHER_SALES_Qmin1 THEN 'FISHING'
		WHEN FIN.HUNT_SALES_Qmin1 > FIN.FISH_SALES_Qmin1 AND FIN.HUNT_SALES_Qmin1 > FIN.OTHER_SALES_Qmin1 THEN 'HUNTING'
		WHEN FIN.FISH_SALES_Qmin1 > FIN.HUNT_SALES_Qmin1 AND FIN.FISH_SALES_Qmin1 < FIN.OTHER_SALES_Qmin1 THEN 'FISHING MIX'
		WHEN FIN.HUNT_SALES_Qmin1 > FIN.FISH_SALES_Qmin1 AND FIN.HUNT_SALES_Qmin1 < FIN.OTHER_SALES_Qmin1 THEN 'HUNTING MIX'
		WHEN FIN.HUNT_SALES_Qmin1 = 0 AND FIN.FISH_SALES_Qmin1 = 0 AND FIN.OTHER_SALES_Qmin1 = 0 THEN 'No Purchase'
		ELSE 'OTHER'
	   END AS CUSTOMER_TYPE_Qmin1,
	   
	   CASE
	   	WHEN FIN.FISH_SALES_Qmin2 > FIN.HUNT_SALES_Qmin2 AND FIN.FISH_SALES_Qmin2 > FIN.OTHER_SALES_Qmin2 THEN 'FISHING'
		WHEN FIN.HUNT_SALES_Qmin2 > FIN.FISH_SALES_Qmin2 AND FIN.HUNT_SALES_Qmin2 > FIN.OTHER_SALES_Qmin2 THEN 'HUNTING'
		WHEN FIN.FISH_SALES_Qmin2 > FIN.HUNT_SALES_Qmin2 AND FIN.FISH_SALES_Qmin2 < FIN.OTHER_SALES_Qmin2 THEN 'FISHING MIX'
		WHEN FIN.HUNT_SALES_Qmin2 > FIN.FISH_SALES_Qmin2 AND FIN.HUNT_SALES_Qmin2 < FIN.OTHER_SALES_Qmin2 THEN 'HUNTING MIX'
		WHEN FIN.HUNT_SALES_Qmin2 = 0 AND FIN.FISH_SALES_Qmin2 = 0 AND FIN.OTHER_SALES_Qmin2 = 0 THEN 'No Purchase'
		ELSE 'OTHER'
	   END AS CUSTOMER_TYPE_Qmin2,
	   
	   CASE
	   	WHEN FIN.FISH_SALES_Qmin3 > FIN.HUNT_SALES_Qmin3 AND FIN.FISH_SALES_Qmin3 > FIN.OTHER_SALES_Qmin3 THEN 'FISHING'
		WHEN FIN.HUNT_SALES_Qmin3 > FIN.FISH_SALES_Qmin3 AND FIN.HUNT_SALES_Qmin3 > FIN.OTHER_SALES_Qmin3 THEN 'HUNTING'
		WHEN FIN.FISH_SALES_Qmin3 > FIN.HUNT_SALES_Qmin3 AND FIN.FISH_SALES_Qmin3 < FIN.OTHER_SALES_Qmin3 THEN 'FISHING MIX'
		WHEN FIN.HUNT_SALES_Qmin3 > FIN.FISH_SALES_Qmin3 AND FIN.HUNT_SALES_Qmin3 < FIN.OTHER_SALES_Qmin3 THEN 'HUNTING MIX'
		WHEN FIN.HUNT_SALES_Qmin3 = 0 AND FIN.FISH_SALES_Qmin3 = 0 AND FIN.OTHER_SALES_Qmin3 = 0 THEN 'No Purchase'
		ELSE 'OTHER'
	   END AS CUSTOMER_TYPE_Qmin3,
	   	   
	   CASE
	   	WHEN FIN.FISH_SALES_Qmin4 > FIN.HUNT_SALES_Qmin4 AND FIN.FISH_SALES_Qmin4 > FIN.OTHER_SALES_Qmin4 THEN 'FISHING'
		WHEN FIN.HUNT_SALES_Qmin4 > FIN.FISH_SALES_Qmin4 AND FIN.HUNT_SALES_Qmin4 > FIN.OTHER_SALES_Qmin4 THEN 'HUNTING'
		WHEN FIN.FISH_SALES_Qmin4 > FIN.HUNT_SALES_Qmin4 AND FIN.FISH_SALES_Qmin4 < FIN.OTHER_SALES_Qmin4 THEN 'FISHING MIX'
		WHEN FIN.HUNT_SALES_Qmin4 > FIN.FISH_SALES_Qmin4 AND FIN.HUNT_SALES_Qmin4 < FIN.OTHER_SALES_Qmin4 THEN 'HUNTING MIX'
		WHEN FIN.HUNT_SALES_Qmin4 = 0 AND FIN.FISH_SALES_Qmin4 = 0 AND FIN.OTHER_SALES_Qmin4 = 0 THEN 'No Purchase'
		ELSE 'OTHER'
	   END AS CUSTOMER_TYPE_Qmin4
	   
FROM (
SELECT CURRENT_DATE AS DATE_VALUE,
	   BASE.LAST_NAME||BASE.ADDRESS_LINE_1||BASE.STATE_CODE||BASE.ZIP AS RECORD,
	   BASE.MEDHINC_CY,
	   BASE.MEDAGE_CY,
	   BASE.CLOSEST_BP,
	   BASE.CLOSEST_CAB,
	   BASE.MALES_IN_HOUSHOLD,
	   BASE.FEMALES_IN_HOUSHOLD,
	   MAX(BASE.IND_IN_HH) AS IND_IN_HH,
	   MAX(CASE WHEN BASE.REWARDS_REGISTRATION_DATE < BASE.LAST_TAB_DATE THEN 1 ELSE 0 END) AS REWARDS_CUSTOMER,
	   (CURRENT_DATE - 365) - MIN(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.SALE_DATE END) AS DAYS_AS_CUSTOMER,
	   CAST(SUM(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.TRANSACTIONS END) AS FLOAT) AS TOTAL_TRANSACTIONS,
	   CAST(SUM(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.REW_TRANSACTIONS END) AS FLOAT) AS REW_TRANSACTIONS,
	   SUM(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.SALES END) AS TOTAL_SPEND,
	   SUM(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.FISH_SALES ELSE 0 END) FISH_SALES,
	   SUM(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.HUNT_SALES ELSE 0 END) HUNT_SALES,
	   SUM(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.OTHER_SALES ELSE 0 END) OTHER_SALES,
	   SUM(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.TOP_SUB_SALES ELSE 0 END) AS TOP_SUB_SALES,
	   
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 90 AND BASE.LAST_TAB_DATE THEN SALES.TRANSACTIONS ELSE 0 END) AS TRANSACTIONS_Qmin1,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 90 AND BASE.LAST_TAB_DATE THEN SALES.SALES ELSE 0 END) AS SPEND_Qmin1,
	   
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 270 AND BASE.LAST_TAB_DATE-91 THEN SALES.TRANSACTIONS ELSE 0 END) AS TRANSACTIONS_Qmin2,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 270 AND BASE.LAST_TAB_DATE-91 THEN SALES.SALES ELSE 0 END) AS SPEND_Qmin2,
	   
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 360 AND BASE.LAST_TAB_DATE-271 THEN SALES.TRANSACTIONS ELSE 0 END) AS TRANSACTIONS_Qmin3,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 360 AND BASE.LAST_TAB_DATE-271 THEN SALES.SALES ELSE 0 END) AS SPEND_Qmin3,
	   
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 450 AND BASE.LAST_TAB_DATE-361 THEN SALES.TRANSACTIONS ELSE 0 END) AS TRANSACTIONS_Qmin4,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 450 AND BASE.LAST_TAB_DATE-361 THEN SALES.SALES ELSE 0 END) AS SPEND_Qmin4,
	   
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 90 AND BASE.LAST_TAB_DATE THEN SALES.FISH_SALES ELSE 0 END) FISH_SALES_Qmin1,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 90 AND BASE.LAST_TAB_DATE THEN SALES.HUNT_SALES ELSE 0 END) HUNT_SALES_Qmin1,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 90 AND BASE.LAST_TAB_DATE THEN SALES.OTHER_SALES ELSE 0 END) OTHER_SALES_Qmin1,
	   
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 270 AND BASE.LAST_TAB_DATE-91 THEN SALES.FISH_SALES ELSE 0 END) FISH_SALES_Qmin2,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 270 AND BASE.LAST_TAB_DATE-91 THEN SALES.HUNT_SALES ELSE 0 END) HUNT_SALES_Qmin2,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 270 AND BASE.LAST_TAB_DATE-91 THEN SALES.OTHER_SALES ELSE 0 END) OTHER_SALES_Qmin2,
	   
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 360 AND BASE.LAST_TAB_DATE-271 THEN SALES.FISH_SALES ELSE 0 END) FISH_SALES_Qmin3,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 360 AND BASE.LAST_TAB_DATE-271 THEN SALES.HUNT_SALES ELSE 0 END) HUNT_SALES_Qmin3,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 360 AND BASE.LAST_TAB_DATE-271 THEN SALES.OTHER_SALES ELSE 0 END) OTHER_SALES_Qmin3,
	   
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 450 AND BASE.LAST_TAB_DATE-361 THEN SALES.FISH_SALES ELSE 0 END) FISH_SALES_Qmin4,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 450 AND BASE.LAST_TAB_DATE-361 THEN SALES.HUNT_SALES ELSE 0 END) HUNT_SALES_Qmin4,
	   SUM(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 450 AND BASE.LAST_TAB_DATE-361 THEN SALES.OTHER_SALES ELSE 0 END) OTHER_SALES_Qmin4,
	   
	   (CURRENT_DATE - 365) - MAX(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN SALES.SALE_DATE END) AS DAYS_SINCE_PURCHASE,
	   MAX(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN RTL_FLAG END) AS RTL_FLAG,
	   MAX(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN INT_FLAG END) AS INT_FLAG,
	   MAX(CASE WHEN SALES.SALE_DATE < BASE.LAST_TAB_DATE THEN CAT_FLAG END) AS CAT_FLAG,
	   
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 90 AND BASE.LAST_TAB_DATE THEN RTL_FLAG END) AS RTL_FLAG_Qmin1,
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 90 AND BASE.LAST_TAB_DATE THEN INT_FLAG END) AS INT_FLAG_Qmin1,
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 90 AND BASE.LAST_TAB_DATE THEN CAT_FLAG END) AS CAT_FLAG_Qmin1,
	   
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 270 AND BASE.LAST_TAB_DATE-91 THEN RTL_FLAG END) AS RTL_FLAG_Qmin2,
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 270 AND BASE.LAST_TAB_DATE-91 THEN INT_FLAG END) AS INT_FLAG_Qmin2,
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 270 AND BASE.LAST_TAB_DATE-91 THEN CAT_FLAG END) AS CAT_FLAG_Qmin2,
	   
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 360 AND BASE.LAST_TAB_DATE-271 THEN RTL_FLAG END) AS RTL_FLAG_Qmin3,
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 360 AND BASE.LAST_TAB_DATE-271 THEN INT_FLAG END) AS INT_FLAG_Qmin3,
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 360 AND BASE.LAST_TAB_DATE-271 THEN CAT_FLAG END) AS CAT_FLAG_Qmin3,
	   
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 450 AND BASE.LAST_TAB_DATE-361 THEN RTL_FLAG END) AS RTL_FLAG_Qmin4,
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 450 AND BASE.LAST_TAB_DATE-361 THEN INT_FLAG END) AS INT_FLAG_Qmin4,
	   MAX(CASE WHEN SALES.SALE_DATE BETWEEN BASE.LAST_TAB_DATE - 450 AND BASE.LAST_TAB_DATE-361 THEN CAT_FLAG END) AS CAT_FLAG_Qmin4,
	   
	   SUM(CASE WHEN SALES.SALE_DATE > BASE.LAST_TAB_DATE AND SALES.SALE_DATE <= BASE.LAST_TAB_DATE + 15 THEN SALES.SALES ELSE 0 END) AS TARGET_VALUE15,
	   MAX(CASE WHEN SALES.SALE_DATE > BASE.LAST_TAB_DATE AND SALES.SALE_DATE <= BASE.LAST_TAB_DATE + 15 THEN 1 ELSE 0 END) AS TARGET_PURCH_NEXT15
FROM (
	SELECT I.LAST_NAME,
		   AD.ADDRESS_LINE_1,
		   GEO.STATE_CODE,
		   GEO.ZIP,
		   ASD.DISTANCE AS CLOSEST_BP,
		   ROUND(CZD.CLOSEST_STORE_DIST,2) AS CLOSEST_CAB,
		   ESR.MEDAGE_CY,
		   ESR.MEDHINC_CY,
		   COUNT(DISTINCT I.MEMBER_KEY) AS IND_IN_HH,
		   COUNT(DISTINCT CASE WHEN I.GENDER = 'M' THEN I.MEMBER_KEY END) AS MALES_IN_HOUSHOLD,
		   COUNT(DISTINCT CASE WHEN I.GENDER = 'F' THEN I.MEMBER_KEY END) AS FEMALES_IN_HOUSHOLD,
		   MAX(CASE WHEN I.REWARDS_ACTIVE_CODE = 'A' THEN 1 ELSE 0 END) AS REWARDS_CUSTOMER,
		   MAX(M.LAST_TAB_DATE) AS LAST_TAB_DATE,
		   MIN(I.REWARDS_REGISTRATION_DATE) AS REWARDS_REGISTRATION_DATE
	FROM EDW_SPOKE..DIM_INDIVIDUAL I
	 JOIN EDW_SPOKE..DIM_ADDRESS AD ON I.ADDRESS_KEY = AD.MEMBER_KEY
	 JOIN EDW_SPOKE..DIM_GEOGRAPHY GEO ON AD.GEOGRAPHY_MEMBER_KEY = GEO.MEMBER_KEY
	 JOIN EDW_SPOKE..FACT_ADDRESS_STORE_DISTANCE ASD ON AD.MEMBER_KEY = ASD.ADDRESS_MEMBER_KEY
	 												   AND ASD.CLOSEST_STORE_FLAG = 'Y'
	 LEFT JOIN DBM_SANDBOX..AAA_CAB_ZIP_DISTANCE CZD ON AD.ZIP = CZD.ZIP5
	 LEFT JOIN DBM_SANDBOX..ESRI_ZIP_DATA_1 ESR ON AD.ZIP = ESR.ID
	 LEFT JOIN (
	 	SELECT BMI.INDIVIDUAL_MEMBER_KEY,
			   MAX(DT.DATE_VALUE) AS LAST_TAB_DATE
		FROM EDW_SPOKE..DIM_DATE DT
		LEFT JOIN EDW_SPOKE..FACT_MARKETING_INTERACTION FMI ON DT.DATE_KEY = FMI.INTERACTION_DATE_KEY
		LEFT JOIN EDW_SPOKE..DIM_TREATMENT TR ON FMI.TREATMENT_KEY = TR.TREATMENT_KEY
		LEFT JOIN EDW_SPOKE..BRIDGE_MARKET_INTER_INDIVIDUAL BMI ON FMI.MARKETING_INTERACTION_KEY = BMI.MARKETING_INTERACTION_KEY 
		WHERE  TR.INTERACTION_TYPE = 'MAILING'
		   	 AND FMI.HOLDOUT_FLAG = 'N'
		 	 AND TR.TYPE_DESCRIPTION IN('RETAIL')
		 	 AND TR.CONTENT = 'TAB'
			 AND DT.DATE_VALUE < CURRENT_DATE - 365
		 	 AND BMI.INDIVIDUAL_PRIMARY_TREATMENT = 'Y' 
			 AND TR.BOOK_CODE <> 'TH'
		GROUP BY BMI.INDIVIDUAL_MEMBER_KEY  
	 ) AS M ON I.MEMBER_KEY = M.INDIVIDUAL_MEMBER_KEY
	GROUP BY 1,2,3,4,5,6,7,8
) BASE
LEFT JOIN (
	SELECT SD.SALE_DATE,
		   I.LAST_NAME,
		   AD.ADDRESS_LINE_1,
		   AD.STATE_CODE,
		   AD.ZIP,
		   COUNT(DISTINCT SD.SH_INBOUND_INTERACTION_KEY) AS TRANSACTIONS,
		   COUNT(DISTINCT CASE WHEN REWT.SH_INBOUND_INTERACTION_KEY IS NOT NULL THEN SD.SH_INBOUND_INTERACTION_KEY ELSE NULL END) AS REW_TRANSACTIONS,
		   MAX(CASE WHEN CH.CHANNEL_NAME = 'RETAIL' THEN 1 ELSE 0 END) AS RTL_FLAG,
		   MAX(CASE WHEN CH.CHANNEL_NAME = 'INTERNET' THEN 1 ELSE 0 END) AS INT_FLAG,
		   MAX(CASE WHEN CH.CHANNEL_NAME = 'CATALOG' THEN 1 ELSE 0 END) AS CAT_FLAG,
		   SUM(CASE WHEN PD.DEPARTMENT_MEMBER_NUMBER IN (100,151,175,200) THEN SD.SALES_PRICE ELSE 0 END) AS FISH_SALES,
		   SUM(CASE WHEN PD.DEPARTMENT_MEMBER_NUMBER IN (400,450,475) THEN SD.SALES_PRICE ELSE 0 END) AS HUNT_SALES,
		   SUM(CASE WHEN PD.DEPARTMENT_MEMBER_NUMBER NOT IN (100,151,175,200,400,450,475,875,999) THEN SD.SALES_PRICE ELSE 0 END) AS OTHER_SALES,
		   SUM(CASE WHEN PD.SUB_DEPARTMENT_DISPLAY NUMBER IN ('0450-0403','0450-0406','0450-0421','0400-0436','0400-0418','0200-0235','0600-0602',
		   													  '0100-0135','0100-0105','0400-0430','0600-0609','0100-0110','0100-0140','0200-0210',
															  '0700-0740','0200-0220','0350-0361','0350-0383','0350-0359','0400-0433','0600-0639',
															  '0500-0542') THEN SD.SALES_PRICE ELSE 0 END) AS TOP_SUB_SALES,
		   SUM(SD.SALES_PRICE) AS SALES
	FROM EDW_SPOKE..FACT_BPS_SALES_HEADER SH
	 JOIN EDW_SPOKE..FACT_BPS_SALES_DETAIL SD ON SH.INBOUND_INTERACTION_KEY = SD.SH_INBOUND_INTERACTION_KEY
	 JOIN EDW_SPOKE..DIM_PERSONA P ON SH.CUSTOMER_MEMBER_KEY = P.MEMBER_KEY
	 JOIN EDW_SPOKE..DIM_INDIVIDUAL I ON P.INDIVIDUAL_MEMBER_KEY = I.MEMBER_KEY
	 JOIN EDW_SPOKE..DIM_CHANNEL CH ON SD.CHANNEL_KEY = CH.CHANNEL_KEY
	 JOIN EDW_SPOKE..DIM_ADDRESS AD ON I.ADDRESS_KEY = AD.MEMBER_KEY
	 JOIN EDW_SPOKE..DIM_DATE DT ON SD.SALE_DATE = DT.DATE_VALUE
	 JOIN EDW_SPOKE..DIM_PRODUCT_BPS PD ON SD.INVENTORY_PRODUCT_MEMBER_KEY = PD.MEMBER_KEY
	 LEFT JOIN (
	 	SELECT DISTINCT SH_INBOUND_INTERACTION_KEY
		FROM EDW_SPOKE..FACT_BPS_REWARDS_TRANSACTION
	 ) AS REWT ON SH.INBOUND_INTERACTION_KEY = REWT.SH_INBOUND_INTERACTION_KEY
	 WHERE SD.ACTUAL_SALE_FLAG = 'Y'
		AND SD.RETURN_FLAG = 'N'
	 GROUP BY 1,2,3,4,5 
) AS SALES ON BASE.LAST_NAME = SALES.LAST_NAME
	        AND BASE.ADDRESS_LINE_1 = SALES.ADDRESS_LINE_1
			AND BASE.STATE_CODE = SALES.STATE_CODE
			AND BASE.ZIP = SALES.ZIP
WHERE BASE.LAST_TAB_DATE IS NOT NULL
GROUP BY BASE.LAST_NAME, BASE.ADDRESS_LINE_1, BASE.STATE_CODE, BASE.ZIP, BASE.MEDHINC_CY, BASE.MEDAGE_CY, 
	     BASE.CLOSEST_BP, BASE.CLOSEST_CAB, BASE.MALES_IN_HOUSHOLD, BASE.FEMALES_IN_HOUSHOLD

HAVING SUM(SALES.TRANSACTIONS) IS NOT NULL
	AND MIN(SALES.SALE_DATE) < MAX(BASE.LAST_TAB_DATE)
) FIN
WHERE DAYS_SINCE_PURCHASE <= 365*2
ORDER BY RANDOM()
LIMIT 100000