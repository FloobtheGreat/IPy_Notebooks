SELECT 
D.LAST_NAME,
D.ADDRESS_LINE_1,
D.ADDRESS_LINE_2,
D.CITY_NAME,
D.STATE_CODE,
D.COUNTRY_CODE,
D.ZIP,
D.ZIP_EXT,
SUM(D.SALES_R12) AS SALES_R12,
SUM(D.SALES_R24) AS SALES_R24,
SUM(D.SALES_R48) AS SALES_R48,
SUM(D.SALES_RLT) AS SALES_RLT,
SUM(D.FISHING_MARINE_SALES_LT) AS FISHING_MARINE_SALES_LT,
SUM(D.CAMPING_WATERSPORTS_SALES_LT) AS CAMPING_WATERSPORTS_SALES_LT,
SUM(D.HUNTING_HUNTCLOTH_SALES_LT) AS HUNTING_HUNTCLOTH_SALES_LT,
SUM(D.FOOTWEAR_SALES_LT) AS FOOTWEAR_SALES_LT,
SUM(D.SHOOTING_SALES_LT) AS SHOOTING_SALES_LT,
SUM(D.GIFT_SALES_LT) AS GIFT_SALES_LT,
SUM(D.APPAREL_SALES_LT) AS APPAREL_SALES_LT,
SUM(D.OTHER_SALES_LT) AS OTHER_SALES_LT,
SUM(D.VISITS_LT)*1.0 AS VISITS_LT,

SUM(FISHING_MARINE_SALES_LT) / NULLIF(SUM(SALES_RLT),0) AS FISH_MARINE_PERC,
SUM(CAMPING_WATERSPORTS_SALES_LT) / NULLIF(SUM(SALES_RLT),0) AS CAMPING_WATERSPORTS_PERC,
SUM(HUNTING_HUNTCLOTH_SALES_LT) / NULLIF(SUM(SALES_RLT),0) AS HUNTING_PERC,
SUM(FOOTWEAR_SALES_LT) / NULLIF(SUM(SALES_RLT),0) AS FOOTWEAR_PERC,
SUM(SHOOTING_SALES_LT) /NULLIF(SUM(SALES_RLT),0) AS SHOOTING_PERC,
SUM(GIFT_SALES_LT) / NULLIF(SUM(SALES_RLT),0) AS GIFT_PERC,
SUM(APPAREL_SALES_LT) / NULLIF(SUM(SALES_RLT),0) AS APPAREL_PERC,
SUM(OTHER_SALES_LT) / NULLIF(SUM(SALES_RLT),0) AS OTHER_PERC,

CURRENT_DATE - MAX(D.LAST_PURCHASE_DATE) AS DAYS_SINCE_PURCHASE,
CURRENT_DATE - MIN(D.FIRST_PURCHASE_DATE) AS DAYS_AS_CUSTOMER,
CASE WHEN MIN(CASE WHEN D.REWARDS_REGISTRATION_DATE IS NOT NULL THEN D.REWARDS_REGISTRATION_DATE END) IS NOT NULL THEN 1 ELSE 0 END AS REWARDS_CUSTOMER,

NVL((SUM(D.SALES_R12) / NULLIF(SUM(SALES_R1224),0))-1,0) AS YOY_TREND,

SUM(D.SALES_TARGET_N12) AS SALES_TARGET_N12

FROM (

SELECT 
I.MEMBER_KEY,
I.FIRST_NAME,
I.LAST_NAME,
I.MIDDLE_INITIAL,
A.ADDRESS_LINE_1,
A.ADDRESS_LINE_2,
A.CITY_NAME,
A.STATE_CODE,
A.COUNTRY_CODE,
A.ZIP,
A.ZIP_EXT,
I.EMAIL_ADDRESS,
I.EMAIL_SUPPRESS,
I.FULL_PHONE_NUMBER,
NVL(SUM(CASE WHEN D.DATE_VALUE BETWEEN CURRENT_DATE - 364 AND CURRENT_DATE THEN SD.SALES_PRICE END),0) AS SALES_TARGET_N12,
NVL(SUM(CASE WHEN D.DATE_VALUE BETWEEN CURRENT_DATE - 728 AND CURRENT_DATE - 364  THEN SD.SALES_PRICE END),0) AS SALES_R12,
NVL(SUM(CASE WHEN D.DATE_VALUE BETWEEN CURRENT_DATE - 1092 AND CURRENT_DATE - 728  THEN SD.SALES_PRICE END),0) AS SALES_R1224,
NVL(SUM(CASE WHEN D.DATE_VALUE BETWEEN CURRENT_DATE - 1092 AND CURRENT_DATE - 364  THEN SD.SALES_PRICE END),0) AS SALES_R24,
NVL(SUM(CASE WHEN D.DATE_VALUE BETWEEN CURRENT_DATE - 1820 AND CURRENT_DATE - 364  THEN SD.SALES_PRICE END),0) AS SALES_R48,
NVL(SUM(CASE WHEN  D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS SALES_RLT,
NVL(SUM(CASE WHEN P.DEPARTMENT_MEMBER_NUMBER IN (100,151,175,200) AND D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS FISHING_MARINE_SALES_LT,
NVL(SUM(CASE WHEN P.DEPARTMENT_MEMBER_NUMBER IN (300,350) AND D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS CAMPING_WATERSPORTS_SALES_LT,
NVL(SUM(CASE WHEN P.DEPARTMENT_MEMBER_NUMBER IN (400,475) AND D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS HUNTING_HUNTCLOTH_SALES_LT,
NVL(SUM(CASE WHEN P.DEPARTMENT_MEMBER_NUMBER IN (450) AND D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS SHOOTING_SALES_LT,
NVL(SUM(CASE WHEN P.DEPARTMENT_MEMBER_NUMBER IN (500) AND D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS FOOTWEAR_SALES_LT,
NVL(SUM(CASE WHEN P.DEPARTMENT_MEMBER_NUMBER IN (600,650,675) AND D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS APPAREL_SALES_LT,
NVL(SUM(CASE WHEN P.DEPARTMENT_MEMBER_NUMBER IN (700) AND D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS GIFT_SALES_LT,
NVL(SUM(CASE WHEN P.DEPARTMENT_MEMBER_NUMBER IN (800,850) AND D.DATE_VALUE < CURRENT_DATE - 364 THEN SD.SALES_PRICE END),0) AS OTHER_SALES_LT,
MIN(CASE WHEN D.DATE_VALUE < CURRENT_DATE - 364 THEN D.DATE_VALUE END) AS FIRST_PURCHASE_DATE,
MAX(CASE WHEN D.DATE_VALUE < CURRENT_DATE - 364 THEN D.DATE_VALUE END) AS LAST_PURCHASE_DATE,
MIN(CASE WHEN I.REWARDS_REGISTRATION_DATE IS NOT NULL AND I.REWARDS_REGISTRATION_DATE < CURRENT_DATE - 364 THEN I.REWARDS_REGISTRATION_DATE END) AS REWARDS_REGISTRATION_DATE,
COUNT(DISTINCT CASE WHEN SD.SALE_DATE < CURRENT_DATE - 364 THEN SD.SALE_DATE END) AS VISITS_LT

FROM EDW_SPOKE..FACT_BPS_SALES_DETAIL SD
JOIN EDW_SPOKE..FACT_BPS_SALES_HEADER SH
ON SD.SH_INBOUND_INTERACTION_KEY = SH.INBOUND_INTERACTION_KEY
JOIN EDW_SPOKE..DIM_PERSONA PER
ON SH.CUSTOMER_MEMBER_KEY = PER.MEMBER_KEY
JOIN EDW_SPOKE..DIM_INDIVIDUAL I
ON PER.INDIVIDUAL_MEMBER_KEY = I.MEMBER_KEY
JOIN EDW_SPOKE..DIM_ADDRESS A
ON I.ADDRESS_KEY = A.MEMBER_KEY
JOIN EDW_SPOKE..DIM_DATE D
ON SD.SALE_DATE_KEY = D.DATE_KEY
JOIN EDW_SPOKE..DIM_PRODUCT_BPS P
ON SD.SALES_PRODUCT_MEMBER_KEY = P.MEMBER_KEY

WHERE P.DEPARTMENT_MEMBER_NUMBER NOT IN (875,999)
AND SD.SALES_PRICE BETWEEN -500000 AND 500000
AND SD.ACTUAL_SALE_FLAG = 'Y'

GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14
) D

GROUP BY 1,2,3,4,5,6,7,8

HAVING SUM(D.SALES_R48) > 0


ORDER BY RANDOM()

limit 175000
